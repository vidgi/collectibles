/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import {useFrame} from 'react-three-fiber'

const collectiblesList = [
  'etched-wood',
  'audubon-zoo-figurine',
  'brown-batik-family',
  'brown-puppet',
  'cambodian-silk',
  'christmas',
  'coconut-spring',
  'coin-bank',
  'cute-fruit-pick',
  'girafa',
  'happy-meal',
  'indonesian-batik',
  'lacquered-wood',
  'large-standing',
  'memphis-zigzag-family',
  'orange-figurine',
  'painted-clay',
  'red-bow',
  'red-wooden-batik',
  'serenity',
  'singapore-zoo',
  'small-batik',
  'tray',
  'unknown-zoo-figurine',
  'wheels',
  'yellow-painted-wood',
  'yellow-puppet'];

const random = Math.floor(Math.random() * collectiblesList.length);
const randomURL = collectiblesList[random]



export default function Scene({ ...props }) {

  const { nodes, materials } = useGLTF(`/assets/giraffes/${randomURL}.glb`)
  console.log(nodes)
  // const rotationVal = -Math.PI / 2
  const ref = useRef()

  // useFrame(() => (rotationVal = rotationVal +0.01))
  // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    // ref.current.rotation.x = 5*Math.cos(t/2)/8
    ref.current.rotation.y = t/2
    // ref.current.rotation.z = -0.2-(1+Math.sin(t/1.5))/4
    // ref.current.position.z = (2+Math.sin(t/2))/20
    // ref.current.position.x = 1
    // ref.current.position.y = 0
    ref.current.scale.y = 5
    ref.current.scale.x = 5
    ref.current.scale.z = 5


  })

  return (
    <group ref={ref} dispose={null}>
    {/* <group rotation={[rotationVal, 0, 0]} scale={[1, 1, 1]}> */}
    <mesh geometry={nodes['mesh_0'].geometry} material={nodes['mesh_0'].material} scale={5}> 
           <meshStandardMaterial
              color={"#000000"}
              wireframe = {true}
              attach="material"
              transparent={true}
              opacity={0.8}
              wireframeLinewidth = {1}
         />
      </mesh>
      {/* </group> */}

          </group>

  )
}

useGLTF.preload(`/assets/giraffes/${randomURL}.glb`)