/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import {useFrame} from '@react-three/fiber'

const collectiblesList = [
  'giraffes/etched-wood',
  'giraffes/audubon-zoo-figurine',
  'giraffes/brown-batik-family',
  'giraffes/brown-puppet',
  'giraffes/cambodian-silk',
  'giraffes/christmas',
  'giraffes/coconut-spring',
  'giraffes/coin-bank',
  'giraffes/cute-fruit-pick',
  'giraffes/girafa',
  'giraffes/happy-meal',
  'giraffes/indonesian-batik',
  'giraffes/lacquered-wood',
  'giraffes/large-standing',
  'giraffes/memphis-zigzag-family',
  'giraffes/orange-figurine',
  'giraffes/painted-clay',
  'giraffes/red-bow',
  'giraffes/red-wooden-batik',
  'giraffes/serenity',
  'giraffes/singapore-zoo',
  'giraffes/small-batik',
  'giraffes/tray',
  'giraffes/unknown-zoo-figurine',
  'giraffes/wheels',
  'giraffes/yellow-painted-wood',
  'giraffes/yellow-puppet',
  'mushrooms/mulch-maids',
  'mushrooms/ringless-honey-mushroom',
  'mushrooms/golden-milkcap'
];

const random = Math.floor(Math.random() * collectiblesList.length);
const randomURL = collectiblesList[random]

export default function Scene({ ...props }) {

  const { nodes } = useGLTF(`/assets/${randomURL}.glb`)
  const ref = useRef()

  // const rotationVal = -Math.PI / 2
  // useFrame(() => (rotationVal = rotationVal +0.01))
  // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    // ref.current.rotation.x = 5*Math.cos(t/2)/8
    ref.current.rotation.y = t/2
    // ref.current.rotation.z = -0.2-(1+Math.sin(t/1.5))/4
    // ref.current.position.z = (2+Math.sin(t/2))/20
    // ref.current.position.x = 1
    // ref.current.position.y = 0
    ref.current.scale.y = 5.8*Math.sin(t/1.6)+9
    ref.current.scale.x = 5.8*Math.sin(t/1.6)+9
    ref.current.scale.z = 5.8*Math.sin(t/1.6)+9

  })

  return (
    <group ref={ref} dispose={null}>
    {/* <group rotation={[rotationVal, 0, 0]} scale={[1, 1, 1]}> */}
    <mesh geometry={nodes['mesh_0'].geometry} material={nodes['mesh_0'].material} scale={5}> 
           <meshStandardMaterial
              color={"#000000"}
              wireframe = {true}
              attach="material"
              transparent={true}
              opacity={0.8}
              wireframeLinewidth = {1}
         />
      </mesh>
      {/* </group> */}

          </group>
          

  )
}

useGLTF.preload(`/assets/${randomURL}.glb`)